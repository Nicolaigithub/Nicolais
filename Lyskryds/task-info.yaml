type: edu
files:
- name: Lyskrydsopg.py
  visible: true
  text: |+
    from random import random
    from time import sleep


    def state0():
        print ('\x1b[7;32;40m' + "Grøn! Kør" + '\x1b[0m')
        sleep(5.5)
        return state1

    def state1():
        print ('\x1b[6;30;43m' + "Gul! stop" + '\x1b[0m')
        sleep(1.5)
        return state2

    def state2():
        print ('\x1b[6;30;41m' + "Rød! stop" + '\x1b[0m')
        sleep(5.5)
        return state0

    state=state0    # initial state
    while state: state=state()  # starter statemachine
    print ("Done with states")

  learner_created: false
- name: tests/test_task.py
  visible: false
  text: |
    import unittest

    from ..Lyskrydsopg import sum


    # todo: replace this with an actual test
    class TestCase(unittest.TestCase):
        def test_add(self):
            self.assertEqual(sum(1, 2), 3, msg="adds 1 + 2 to equal 3")
  learner_created: false
- name: __init__.py
  visible: true
  learner_created: false
- name: tests/__init__.py
  visible: false
  learner_created: false
- name: tl.png
  visible: true
  learner_created: false
- name: Lyskryds_RPI.py
  visible: true
  text: |
    #Statemachine til beskrivelse af livets gang
    from gpiozero import LED
    from time import sleep

    NSred= LED(13)
    NSgul=LED(19)
    NSgreen=LED(26)
    EVred=LED(21)
    EVgul=LED(20)
    EVgreen=LED(16)


    print("Test!")
    EVred.on()
    sleep(1)
    EVgreen.on()
    sleep(1)
    EVgul.on()
    sleep(1)
    NSred.on()
    sleep(1)
    NSgreen.on()
    sleep(1)
    NSgul.on()
    sleep(1)
    EVred.off()
    EVgreen.off()
    EVgul.off()
    NSred.off()
    NSgreen.off()
    NSgul.off()

    def redred(x):# Udgangs punkt for lyskrydset
        if x=="NS": #Hvis lyskrydset kommer fra NS skal den gå til EV
            x="EV"
            print("NS RED   EV RED")
            NSred.on()
            EVred.on()
            sleep(2)
            return EV(x)
        elif x=="EV": #Hvis lyskrydset kommer fra EV skal den gå til NS
            x="NS"
            print("NS red   EV red")
            NSred.on()
            EVred.on()
            sleep(2)
            return NS(x)
    def NS():

    def NS_green():

    def NS_gul():

    def EV():

    def EV_green():

    def EV_gul():

    state=redred(x="EV")
    while state: state=redred(x="EV")
  learner_created: false
status: Unchecked
record: -1
